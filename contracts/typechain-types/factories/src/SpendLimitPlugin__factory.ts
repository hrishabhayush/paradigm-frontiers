/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SpendLimitPlugin,
  SpendLimitPluginInterface,
} from "../../src/SpendLimitPlugin";

const _abi = [
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "InvalidRelayer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "ProofVerified",
    type: "event",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "uint256",
        name: "spendLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recoveryAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256[2]",
        name: "pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[]",
        name: "publicInputs",
        type: "uint256[]",
      },
    ],
    name: "executeWithProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spendLimit",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "relayerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "recoveryAddress",
            type: "address",
          },
        ],
        internalType: "struct SpendLimitPlugin.Config",
        name: "cfg",
        type: "tuple",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[]",
        name: "_pubSignals",
        type: "uint256[]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061084f806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806379502c55146100515780637cbb497c14610099578063b8173a49146100ae578063c32e370e146100c1575b600080fd5b60005460015460025461006f92916001600160a01b03908116911683565b604080519384526001600160a01b0392831660208501529116908201526060015b60405180910390f35b6100ac6100a7366004610538565b6100e4565b005b6100ac6100bc3660046105c4565b6100f6565b6100d46100cf3660046106af565b6101dc565b6040519015158152602001610090565b8060006100f182826107e1565b505050565b6001546001600160a01b031633146101285760405163b06da3a760e01b81523360048201526024015b60405180910390fd5b80156101765760405162461bcd60e51b815260206004820152601860248201527f756e6578706563746564207075626c696320696e707574730000000000000000604482015260640161011f565b60606000610186878787856101dc565b9050806101a6576040516309bde33960e01b815260040160405180910390fd5b60405133907f9cbb2c694eed9687ad9654ae462269807cc8b44f6dbd076f296bd916f1f3d0cd90600090a2505050505050505050565b6000610515565b600060808501600086017f0ecbe51786a6c38279e2d067c05bf4cad9c6e7b291fd14d9bc7cd0e17ad8a43d81527f2d9dfba5a5fb721ce37372e8f11f6d52c9726fed9f3f01784b0c780ed8d6a741602082015250823581527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208401357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020820152833560408201526020840135606082015260408401356080820152606084013560a08201527f08e119af80d07e78f229c4dc0931751c19b84ca1e7ef890da9a28e381639b7d560c08201527f030eb4249e4c2d9f98a7792dbd14133b2315f5fda11dcdf371e0fb0d579a90ee60e08201527f0e46cca6a557f590f5244075008c9aa41a1fb877a11fe27afa908d1386d4f6896101008201527f2f45eb36f5f2bc30fac387659083675bd1b8138e1ef6007ff0563bf42494bc036101208201527f2704e1256ba05904f4291b80d2603d7d1de0ef690d5e374fc04523c466c960736101408201527f26b72f85123d953c8c5bb547a9b2494abb1a798845eafd90338107d53d895423610160820152600086015161018082015260206000018601516101a08201527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08201527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08201527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008201527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220820152843561024082015260208501356102608201527f2a1046cf456b267caef69bb0caae31469f800f95e8a9902677048c8f040146ea6102808201527f0707d96a2835ec1c531a9af25be58ac995568378053cef7f9b7416e45d87f4b96102a08201527f1fdd91fe4a9d1be39de33fda7b8332fa459a55e67283de7da1c287074fd11a876102c08201527f05c26df44da4196aeaa9731e45dd0ac37b25684c0d8d8fa985e474a123086c8f6102e08201526020816103008360086107d05a03fa90511695945050505050565b604051610380810160405261052c818587896101e3565b90508060005260206000f35b60006060828403121561054a57600080fd5b50919050565b806040810183101561056157600080fd5b92915050565b806080810183101561056157600080fd5b60008083601f84011261058a57600080fd5b50813567ffffffffffffffff8111156105a257600080fd5b6020830191508360208260051b85010111156105bd57600080fd5b9250929050565b6000806000806000806000610140888a0312156105e057600080fd5b873567ffffffffffffffff808211156105f857600080fd5b818a0191508a601f83011261060c57600080fd5b81358181111561061b57600080fd5b8b602082850101111561062d57600080fd5b602083019950809850506106448b60208c01610550565b96506106538b60608c01610567565b95506106628b60e08c01610550565b94506101208a013591508082111561067957600080fd5b506106868a828b01610578565b989b979a50959850939692959293505050565b634e487b7160e01b600052604160045260246000fd5b60008060008061012085870312156106c657600080fd5b6106d08686610550565b93506106df8660408701610567565b92506106ee8660c08701610550565b915061010085013567ffffffffffffffff8082111561070c57600080fd5b818701915087601f83011261072057600080fd5b813560208282111561073457610734610699565b8160051b604051601f19603f8301168101818110868211171561075957610759610699565b6040529283526020808401945085820101928b84111561077857600080fd5b6020860195505b838610156107985785358552948201949382019361077f565b989b979a50959850505050505050565b600081356001600160a01b038116811461056157600080fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b813581556107fd6107f4602084016107a8565b600183016107c1565b61081561080c604084016107a8565b600283016107c1565b505056fea264697066735822122086b0b825b3daa0bbdcef0e512864a319f2559ceba9d77d1f204bf23cb1dbfcac64736f6c63430008180033";

type SpendLimitPluginConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpendLimitPluginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpendLimitPlugin__factory extends ContractFactory {
  constructor(...args: SpendLimitPluginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SpendLimitPlugin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SpendLimitPlugin__factory {
    return super.connect(runner) as SpendLimitPlugin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpendLimitPluginInterface {
    return new Interface(_abi) as SpendLimitPluginInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SpendLimitPlugin {
    return new Contract(address, _abi, runner) as unknown as SpendLimitPlugin;
  }
}
